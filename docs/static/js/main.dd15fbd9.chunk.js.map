{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAETC,mBAAS,IAFA,mBAEtCC,EAFsC,KAE1BC,EAF0B,KAoB9C,OACI,6BACI,0BAAMC,SAdO,SAACC,GAElBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAO,IACzBR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,OASd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAtBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,uBCPjBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEdC,EAFc,iDAEmCC,UAAWH,GAF9C,+DAGDI,MAAMF,GAHL,cAGdG,EAHc,gBAICA,EAAKC,OAJN,uBAIbC,EAJa,EAIbA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVtB,kBAcbM,GAda,4CAAH,sDCCRO,EAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIpC,OAFAc,QAAQC,IAAIN,EAAIC,EAAOV,GAGnB,yBAAKgB,UAAU,wBACX,yBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,+BAAKA,EAAL,OCJCS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAc,IAAD,EAEbd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAJ0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAyBvC,OAlBAC,qBAAY,WAER1B,EAASC,GACR0B,MAAK,SAAAC,GACGX,QAAQC,IAAIU,GAETH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAM1B,CAAEtB,IAIEuB,EDrByBK,CAAc5B,GAAjCa,EAHwB,EAG9BN,KAAce,EAHgB,EAGhBA,QAErB,OACI,oCACA,wBAAIJ,UAAU,mBAAd,IAAkClB,EAAlC,KACCsB,GAAW,uBAAGJ,UAAU,kBAAb,eAGZ,yBAAKA,UAAU,aAEHL,EAAOJ,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACAmB,IAAMnB,EAAIC,IACND,UEjBfoB,EAAe,WAAO,IAAD,EAEM5C,mBAAS,CAAC,cAFhB,mBAEvB6C,EAFuB,KAEX9C,EAFW,KAU9B,OACI,6BACK,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC9B,6BAEA,4BAEQ8C,EAAWtB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACA6B,IAAK7B,EACLA,SAAUA,U,MCpBlCgC,IAASC,OACL,kBAAE,EAAF,MACAC,SAASC,eAAe,U","file":"static/js/main.dd15fbd9.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const  [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const hanldeSubmit = (e) =>{\r\n\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length>2 ){\r\n            setCategories( cats => [ inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={hanldeSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes ={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","// Crearse una función flecha\r\n export const getGifs = async( category ) =>{\r\n    // Petición http para traer las imágenes de la categoria:\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category )}&limit=10&api_key=vE79LTjNJcX78kw4xWLvxkoqAiL9swPt`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img =>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n    \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    console.log(id, title, url);\r\n\r\n    return (\r\n        <div className=\"card animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n// useEffect te permite correr cierto código de manera condicional\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n\r\n\r\n    const {data: images, loading} = useFetchGifs( category);//usando mi hook\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__fadeIn\"> {category} </h3>\r\n        {loading && <p className=\"animate__flash\"> Loading...</p>}\r\n\r\n\r\n        <div className=\"card-grid\">          \r\n                {\r\n                    images.map(img =>(\r\n                        <GifGridItem \r\n                        key={ img.id }\r\n                        {...img}\r\n                        />\r\n                    ))\r\n                }\r\n\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\n// estructura de custom hook\r\nexport const useFetchGifs = ( category ) =>{\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect ( ()=>{\r\n\r\n        getGifs( category )\r\n        .then(imgs =>{\r\n                 console.log(imgs);\r\n\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n\r\n        })    \r\n\r\n            \r\n    }, [ category ])\r\n\r\n\r\n\r\n    return state;  //{ data:[], loading: true}\r\n\r\n\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n    // const handleAdd = () =>{\r\n    //     // setCategories ( [ 'HunterXHunter',...categories] );\r\n    //     // Se usó operador spread\r\n    //     setCategories( cats => [...cats, 'HunterXHunter']);\r\n    //     // Se usó callback\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n             <h2>GifExpertApp</h2>\r\n             <AddCategory setCategories={ setCategories } />\r\n            <hr/> \r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => ( \r\n                        <GifGrid \r\n                        key={category}\r\n                        category={category} \r\n                        />\r\n\r\n                     ) )\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { GifExpertApp } from './GifExpertApp';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    < GifExpertApp />,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}